{
  "contractName": "CrossChainEnabledArbitrumL2",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"[Arbitrum](https://arbitrum.io/) specialization or the {CrossChainEnabled} abstraction the L2 side (arbitrum). This version should only be deployed on L2 to process cross-chain messages originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}. Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore, this specialization of {CrossChainEnabled} does not include a constructor. _Available since v4.6._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":\"CrossChainEnabledArbitrumL2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0x1ec2f661e2b0bd06b245f7e847111d5b40d32380794bd2d791e89b0bdc3ef082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9466ccdfd19225a51b9b785e60f22b04220684b8c9f24e11b62b740ad77f761f\",\"dweb:/ipfs/QmUAXfC4rzW9cqVdNkXA5c4HgqxNRwzo2MbUV4wDT52tED\"]},\"project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":{\"keccak256\":\"0xfbb85534e707a67630239d06d3fd61cbf5790ab9a735e62c21857e57b8447a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc4752cd89e5fbf739e0cb06ed74d9495b7ef9671ed40b1d421adf6d2ce62325\",\"dweb:/ipfs/QmcmFcMJYZmXeSKaLbv5Hqq8C22Z6iqAHUPuTUPMnZa61z\"]},\"project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/arbitrum/LibArbitrumL2.sol\":{\"keccak256\":\"0x70ac87533df4c8f7f67803a21313af5e77eac61860bd2d7dd28a7fed46216df9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0936c9ec70a0f04011154ce3ef643211d6e6b0e48bb2bb4c6136a6559be9b0a1\",\"dweb:/ipfs/QmTbqTKQfuBkbQc32TArJv6uBa4EqEUEdxC9WAYAjPzsFm\"]},\"project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"project:/contracts/node_modules/openzeppelin-solidity/contracts/vendor/arbitrum/IArbSys.sol\":{\"keccak256\":\"0x5771b4977f37342f1a5bf6495a8418b478583836f9362fcbbf055d77bb620ad6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cfc6c57583b11feaf377863ce8f95eb2674c63dca009d8cbee467707a611aa8\",\"dweb:/ipfs/QmeeQLjwWtnpEfXqhGgTs4cnLp2cKAxAH2CfkizGoAzABE\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol)\n\npragma solidity ^0.8.4;\n\nimport \"../CrossChainEnabled.sol\";\nimport \"./LibArbitrumL2.sol\";\n\n/**\n * @dev [Arbitrum](https://arbitrum.io/) specialization or the\n * {CrossChainEnabled} abstraction the L2 side (arbitrum).\n *\n * This version should only be deployed on L2 to process cross-chain messages\n * originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}.\n *\n * Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore,\n * this specialization of {CrossChainEnabled} does not include a constructor.\n *\n * _Available since v4.6._\n */\nabstract contract CrossChainEnabledArbitrumL2 is CrossChainEnabled {\n    /**\n     * @dev see {CrossChainEnabled-_isCrossChain}\n     */\n    function _isCrossChain() internal view virtual override returns (bool) {\n        return LibArbitrumL2.isCrossChain(LibArbitrumL2.ARBSYS);\n    }\n\n    /**\n     * @dev see {CrossChainEnabled-_crossChainSender}\n     */\n    function _crossChainSender() internal view virtual override onlyCrossChain returns (address) {\n        return LibArbitrumL2.crossChainSender(LibArbitrumL2.ARBSYS);\n    }\n}\n",
  "sourcePath": "/Users/chan/workspace/project_test/back/truffle/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
  "ast": {
    "absolutePath": "project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
    "exportedSymbols": {
      "ArbitrumL2_Bridge": [
        4179
      ],
      "CrossChainEnabled": [
        672
      ],
      "CrossChainEnabledArbitrumL2": [
        854
      ],
      "InvalidCrossChainSender": [
        986
      ],
      "LibArbitrumL2": [
        976
      ],
      "NotCrossChainCall": [
        980
      ]
    },
    "id": 855,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 818,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "135:23:10"
      },
      {
        "absolutePath": "project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/CrossChainEnabled.sol",
        "file": "../CrossChainEnabled.sol",
        "id": 819,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 855,
        "sourceUnit": 673,
        "src": "160:34:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/node_modules/openzeppelin-solidity/contracts/crosschain/arbitrum/LibArbitrumL2.sol",
        "file": "./LibArbitrumL2.sol",
        "id": 820,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 855,
        "sourceUnit": 977,
        "src": "195:29:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 822,
              "name": "CrossChainEnabled",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 672,
              "src": "753:17:10"
            },
            "id": 823,
            "nodeType": "InheritanceSpecifier",
            "src": "753:17:10"
          }
        ],
        "canonicalName": "CrossChainEnabledArbitrumL2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 821,
          "nodeType": "StructuredDocumentation",
          "src": "226:477:10",
          "text": " @dev [Arbitrum](https://arbitrum.io/) specialization or the\n {CrossChainEnabled} abstraction the L2 side (arbitrum).\n This version should only be deployed on L2 to process cross-chain messages\n originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}.\n Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore,\n this specialization of {CrossChainEnabled} does not include a constructor.\n _Available since v4.6._"
        },
        "fullyImplemented": true,
        "id": 854,
        "linearizedBaseContracts": [
          854,
          672
        ],
        "name": "CrossChainEnabledArbitrumL2",
        "nameLocation": "722:27:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              665
            ],
            "body": {
              "id": 836,
              "nodeType": "Block",
              "src": "914:72:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 832,
                          "name": "LibArbitrumL2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "958:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$976_$",
                            "typeString": "type(library LibArbitrumL2)"
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ARBSYS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "958:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 830,
                        "name": "LibArbitrumL2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "931:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$976_$",
                          "typeString": "type(library LibArbitrumL2)"
                        }
                      },
                      "id": 831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isCrossChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 944,
                      "src": "931:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "931:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 829,
                  "id": 835,
                  "nodeType": "Return",
                  "src": "924:55:10"
                }
              ]
            },
            "documentation": {
              "id": 824,
              "nodeType": "StructuredDocumentation",
              "src": "777:61:10",
              "text": " @dev see {CrossChainEnabled-_isCrossChain}"
            },
            "id": 837,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCrossChain",
            "nameLocation": "852:13:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 826,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "890:8:10"
            },
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:10"
            },
            "returnParameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "908:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:6:10"
            },
            "scope": 854,
            "src": "843:143:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              671
            ],
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "1155:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 848,
                          "name": "LibArbitrumL2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "1203:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$976_$",
                            "typeString": "type(library LibArbitrumL2)"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ARBSYS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "1203:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 846,
                        "name": "LibArbitrumL2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "1172:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibArbitrumL2_$976_$",
                          "typeString": "type(library LibArbitrumL2)"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "crossChainSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 975,
                      "src": "1172:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view returns (address)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:52:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 845,
                  "id": 851,
                  "nodeType": "Return",
                  "src": "1165:59:10"
                }
              ]
            },
            "documentation": {
              "id": 838,
              "nodeType": "StructuredDocumentation",
              "src": "992:65:10",
              "text": " @dev see {CrossChainEnabled-_crossChainSender}"
            },
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 842,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 841,
                  "name": "onlyCrossChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 638,
                  "src": "1122:14:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1122:14:10"
              }
            ],
            "name": "_crossChainSender",
            "nameLocation": "1071:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 840,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1113:8:10"
            },
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:2:10"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "1146:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1145:9:10"
            },
            "scope": 854,
            "src": "1062:169:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 855,
        "src": "704:529:10",
        "usedErrors": []
      }
    ],
    "src": "135:1099:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-11T05:53:14.096Z",
  "devdoc": {
    "details": "[Arbitrum](https://arbitrum.io/) specialization or the {CrossChainEnabled} abstraction the L2 side (arbitrum). This version should only be deployed on L2 to process cross-chain messages originating from L1. For the other side, use {CrossChainEnabledArbitrumL1}. Arbitrum L2 includes the `ArbSys` contract at a fixed address. Therefore, this specialization of {CrossChainEnabled} does not include a constructor. _Available since v4.6._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}